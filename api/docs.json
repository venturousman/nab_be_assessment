{
  "openapi": "3.0.1",
  "info": {
    "title": "Product Catalog API",
    "description": "This is a Product Catalog API created with Express.js. You can find more about it [here](https://github.com/venturousman/nab_be_assessment).",
    "contact": {
      "email": "nguyenhoangtin291@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "product",
      "description": "Operations about product"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get list of products",
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Create a product",
        "operationId": "create",
        "requestBody": {
          "description": "Created product object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get a product by id",
        "operationId": "findOne",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a product",
            "required": true,
            "schema": {
              "type": "uniqueidentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update a product",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of a product to update",
            "required": true,
            "schema": {
              "type": "uniqueidentifier"
            }
          }
        ],
        "requestBody": {
          "description": "Updated product object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete a product",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of product to be deleted",
            "required": true,
            "schema": {
              "type": "uniqueidentifier"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "uniqueidentifier"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "decimal"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}